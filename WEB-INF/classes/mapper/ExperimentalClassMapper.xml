<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xrj.mapper.ExperimentalClassMapper" >
  <resultMap id="BaseResultMap" type="com.xrj.bean.ExperimentalClass" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="TOPIC" property="topic" jdbcType="VARCHAR" />
    <result column="CLASS_TIME" property="classTime" jdbcType="VARCHAR" />
    <result column="GRADES_CLASS" property="gradesClass" jdbcType="VARCHAR" />
    <result column="LABORATORY_RESERVE_ID" property="laboratoryReserveId" jdbcType="VARCHAR" />
    <result column="DEVICE_RESERVE_ID" property="deviceReserveId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      ID, TOPIC, CLASS_TIME, GRADES_CLASS, LABORATORY_RESERVE_ID, DEVICE_RESERVE_ID, CREATE_TIME,USER_ID
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xrj.bean.ExperimentalClassExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from experimental_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    ID,TOPIC,CLASS_TIME,GRADES_CLASS,LABORATORY_RESERVE_ID,DEVICE_RESERVE_ID,CREATE_TIME,USER_ID
    from experimental_class
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from experimental_class
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xrj.bean.ExperimentalClassExample" >
    delete from experimental_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xrj.bean.ExperimentalClass" >
    insert into experimental_class (ID, TOPIC, CLASS_TIME, 
      GRADES_CLASS, LABORATORY_RESERVE_ID, DEVICE_RESERVE_ID, 
      CREATE_TIME,USER_ID)
    values (#{id,jdbcType=VARCHAR}, #{topic,jdbcType=VARCHAR}, #{classTime,jdbcType=VARCHAR}, 
      #{gradesClass,jdbcType=VARCHAR}, #{laboratoryReserveId,jdbcType=VARCHAR}, #{deviceReserveId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xrj.bean.ExperimentalClass" >
    insert into experimental_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="topic != null" >
        TOPIC,
      </if>
      <if test="classTime != null" >
        CLASS_TIME,
      </if>
      <if test="gradesClass != null" >
        GRADES_CLASS,
      </if>
      <if test="laboratoryReserveId != null" >
        LABORATORY_RESERVE_ID,
      </if>
      <if test="deviceReserveId != null" >
        DEVICE_RESERVE_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
       <if test="userId != null" >
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="topic != null" >
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="classTime != null" >
        #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="gradesClass != null" >
        #{gradesClass,jdbcType=VARCHAR},
      </if>
      <if test="laboratoryReserveId != null" >
        #{laboratoryReserveId,jdbcType=VARCHAR},
      </if>
      <if test="deviceReserveId != null" >
        #{deviceReserveId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
       <if test="deviceReserveId != null" >
        #{user_id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xrj.bean.ExperimentalClassExample" resultType="java.lang.Integer" >
    select count(*) from experimental_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update experimental_class
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.topic != null" >
        TOPIC = #{record.topic,jdbcType=VARCHAR},
      </if>
      <if test="record.classTime != null" >
        CLASS_TIME = #{record.classTime,jdbcType=VARCHAR},
      </if>
      <if test="record.gradesClass != null" >
        GRADES_CLASS = #{record.gradesClass,jdbcType=VARCHAR},
      </if>
      <if test="record.laboratoryReserveId != null" >
        LABORATORY_RESERVE_ID = #{record.laboratoryReserveId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceReserveId != null" >
        DEVICE_RESERVE_ID = #{record.deviceReserveId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
       <if test="record.userId != null" >
        CREATE_TIME = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update experimental_class
    set ID = #{record.id,jdbcType=VARCHAR},
      TOPIC = #{record.topic,jdbcType=VARCHAR},
      CLASS_TIME = #{record.classTime,jdbcType=VARCHAR},
      GRADES_CLASS = #{record.gradesClass,jdbcType=VARCHAR},
      LABORATORY_RESERVE_ID = #{record.laboratoryReserveId,jdbcType=VARCHAR},
      DEVICE_RESERVE_ID = #{record.deviceReserveId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      USRE_ID = #{record.usreId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xrj.bean.ExperimentalClass" >
    update experimental_class
    <set >
      <if test="topic != null" >
        TOPIC = #{topic,jdbcType=VARCHAR},
      </if>
      <if test="classTime != null" >
        CLASS_TIME = #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="gradesClass != null" >
        GRADES_CLASS = #{gradesClass,jdbcType=VARCHAR},
      </if>
      <if test="laboratoryReserveId != null" >
        LABORATORY_RESERVE_ID = #{laboratoryReserveId,jdbcType=VARCHAR},
      </if>
      <if test="deviceReserveId != null" >
        DEVICE_RESERVE_ID = #{deviceReserveId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceReserveId != null" >
        USER_ID = #{usreId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xrj.bean.ExperimentalClass" >
    update experimental_class
    set TOPIC = #{topic,jdbcType=VARCHAR},
      CLASS_TIME = #{classTime,jdbcType=VARCHAR},
      GRADES_CLASS = #{gradesClass,jdbcType=VARCHAR},
      LABORATORY_RESERVE_ID = #{laboratoryReserveId,jdbcType=VARCHAR},
      DEVICE_RESERVE_ID = #{deviceReserveId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      USER_ID = #{userId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>