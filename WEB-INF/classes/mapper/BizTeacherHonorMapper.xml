<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xrj.mapper.BizTeacherHonorMapper">
    <resultMap id="BaseResultMap" type="com.xrj.bean.BizTeacherHonor">
        <id column="ID" property="id" jdbcType="VARCHAR" />
        <result column="TEACHER_ID" property="teacherId" jdbcType="VARCHAR" />
        <result column="TEACHER_NAME" property="teacherName" jdbcType="VARCHAR" />
        <result column="TITLE" property="title" jdbcType="VARCHAR" />
        <result column="ATTACHMENT" property="attachment" jdbcType="VARCHAR" />
        <result column="DATE" property="date" jdbcType="TIMESTAMP" />
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="STATUS" property="status" jdbcType="VARCHAR" />
        <result column="PUBLIC_ABLE" property="publicAble" jdbcType="TINYINT" />
        <result column="REVIEW_ID" property="reviewId" jdbcType="VARCHAR" />
        <result column="REVIEW_NAME" property="reviewName" jdbcType="VARCHAR" />
        <result column="REVIEW_TIME" property="reviewTime" jdbcType="TIMESTAMP" />
        <result column="APPROVAL" property="approval" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.xrj.bean.BizTeacherHonorWithBLOBs"
        extends="BaseResultMap">
        <result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
        <result column="REMARKS" property="remarks" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="("
                                        close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="("
                                        close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <if test="fields == null">
            ID, TEACHER_ID, TEACHER_NAME, TITLE, ATTACHMENT, DATE, CREATE_TIME, UPDATE_TIME,
            STATUS, PUBLIC_ABLE, REVIEW_ID, REVIEW_NAME, REVIEW_TIME, APPROVAL
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <sql id="Blob_Column_List">
    CONTENT, REMARKS
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
        parameterType="com.xrj.bean.BizTeacherHonorExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from biz_teacher_honor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap"
        parameterType="com.xrj.bean.BizTeacherHonorExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from biz_teacher_honor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startRow != null">
            limit #{startRow} , #{pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        ID,TEACHER_ID,TEACHER_NAME,TITLE,ATTACHMENT,DATE,CREATE_TIME,UPDATE_TIME,STATUS,PUBLIC_ABLE,REVIEW_ID,REVIEW_NAME,REVIEW_TIME,APPROVAL,CONTENT,REMARKS
        ,
        <include refid="Blob_Column_List" />
        from biz_teacher_honor
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from biz_teacher_honor
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.xrj.bean.BizTeacherHonorExample">
        delete from biz_teacher_honor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.xrj.bean.BizTeacherHonorWithBLOBs">
    insert into biz_teacher_honor (ID, TEACHER_ID, TEACHER_NAME, 
      TITLE, ATTACHMENT, DATE, 
      CREATE_TIME, UPDATE_TIME, STATUS, 
      PUBLIC_ABLE, REVIEW_ID, REVIEW_NAME, 
      REVIEW_TIME, APPROVAL, CONTENT, 
      REMARKS)
    values (#{id,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{attachment,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{publicAble,jdbcType=TINYINT}, #{reviewId,jdbcType=VARCHAR}, #{reviewName,jdbcType=VARCHAR}, 
      #{reviewTime,jdbcType=TIMESTAMP}, #{approval,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, 
      #{remarks,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.xrj.bean.BizTeacherHonorWithBLOBs">
        insert into biz_teacher_honor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="teacherId != null">
                TEACHER_ID,
            </if>
            <if test="teacherName != null">
                TEACHER_NAME,
            </if>
            <if test="title != null">
                TITLE,
            </if>
            <if test="attachment != null">
                ATTACHMENT,
            </if>
            <if test="date != null">
                DATE,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="publicAble != null">
                PUBLIC_ABLE,
            </if>
            <if test="reviewId != null">
                REVIEW_ID,
            </if>
            <if test="reviewName != null">
                REVIEW_NAME,
            </if>
            <if test="reviewTime != null">
                REVIEW_TIME,
            </if>
            <if test="approval != null">
                APPROVAL,
            </if>
            <if test="content != null">
                CONTENT,
            </if>
            <if test="remarks != null">
                REMARKS,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=VARCHAR},
            </if>
            <if test="teacherName != null">
                #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="attachment != null">
                #{attachment,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="publicAble != null">
                #{publicAble,jdbcType=TINYINT},
            </if>
            <if test="reviewId != null">
                #{reviewId,jdbcType=VARCHAR},
            </if>
            <if test="reviewName != null">
                #{reviewName,jdbcType=VARCHAR},
            </if>
            <if test="reviewTime != null">
                #{reviewTime,jdbcType=TIMESTAMP},
            </if>
            <if test="approval != null">
                #{approval,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xrj.bean.BizTeacherHonorExample"
        resultType="java.lang.Integer">
        select count(*) from biz_teacher_honor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update biz_teacher_honor
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.teacherId != null">
                TEACHER_ID = #{record.teacherId,jdbcType=VARCHAR},
            </if>
            <if test="record.teacherName != null">
                TEACHER_NAME = #{record.teacherName,jdbcType=VARCHAR},
            </if>
            <if test="record.title != null">
                TITLE = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.attachment != null">
                ATTACHMENT = #{record.attachment,jdbcType=VARCHAR},
            </if>
            <if test="record.date != null">
                DATE = #{record.date,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.publicAble != null">
                PUBLIC_ABLE = #{record.publicAble,jdbcType=TINYINT},
            </if>
            <if test="record.reviewId != null">
                REVIEW_ID = #{record.reviewId,jdbcType=VARCHAR},
            </if>
            <if test="record.reviewName != null">
                REVIEW_NAME = #{record.reviewName,jdbcType=VARCHAR},
            </if>
            <if test="record.reviewTime != null">
                REVIEW_TIME = #{record.reviewTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.approval != null">
                APPROVAL = #{record.approval,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                CONTENT = #{record.content,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.remarks != null">
                REMARKS = #{record.remarks,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update biz_teacher_honor
        set ID = #{record.id,jdbcType=VARCHAR},
        TEACHER_ID = #{record.teacherId,jdbcType=VARCHAR},
        TEACHER_NAME = #{record.teacherName,jdbcType=VARCHAR},
        TITLE = #{record.title,jdbcType=VARCHAR},
        ATTACHMENT = #{record.attachment,jdbcType=VARCHAR},
        DATE = #{record.date,jdbcType=TIMESTAMP},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
        STATUS = #{record.status,jdbcType=VARCHAR},
        PUBLIC_ABLE = #{record.publicAble,jdbcType=TINYINT},
        REVIEW_ID = #{record.reviewId,jdbcType=VARCHAR},
        REVIEW_NAME = #{record.reviewName,jdbcType=VARCHAR},
        REVIEW_TIME = #{record.reviewTime,jdbcType=TIMESTAMP},
        APPROVAL = #{record.approval,jdbcType=VARCHAR},
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
        REMARKS = #{record.remarks,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update biz_teacher_honor
        set ID = #{record.id,jdbcType=VARCHAR},
        TEACHER_ID = #{record.teacherId,jdbcType=VARCHAR},
        TEACHER_NAME = #{record.teacherName,jdbcType=VARCHAR},
        TITLE = #{record.title,jdbcType=VARCHAR},
        ATTACHMENT = #{record.attachment,jdbcType=VARCHAR},
        DATE = #{record.date,jdbcType=TIMESTAMP},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
        STATUS = #{record.status,jdbcType=VARCHAR},
        PUBLIC_ABLE = #{record.publicAble,jdbcType=TINYINT},
        REVIEW_ID = #{record.reviewId,jdbcType=VARCHAR},
        REVIEW_NAME = #{record.reviewName,jdbcType=VARCHAR},
        REVIEW_TIME = #{record.reviewTime,jdbcType=TIMESTAMP},
        APPROVAL = #{record.approval,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xrj.bean.BizTeacherHonorWithBLOBs">
        update biz_teacher_honor
        <set>
            <if test="teacherId != null">
                TEACHER_ID = #{teacherId,jdbcType=VARCHAR},
            </if>
            <if test="teacherName != null">
                TEACHER_NAME = #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                TITLE = #{title,jdbcType=VARCHAR},
            </if>
            <if test="attachment != null">
                ATTACHMENT = #{attachment,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                DATE = #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=VARCHAR},
            </if>
            <if test="publicAble != null">
                PUBLIC_ABLE = #{publicAble,jdbcType=TINYINT},
            </if>
            <if test="reviewId != null">
                REVIEW_ID = #{reviewId,jdbcType=VARCHAR},
            </if>
            <if test="reviewName != null">
                REVIEW_NAME = #{reviewName,jdbcType=VARCHAR},
            </if>
            <if test="reviewTime != null">
                REVIEW_TIME = #{reviewTime,jdbcType=TIMESTAMP},
            </if>
            <if test="approval != null">
                APPROVAL = #{approval,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                CONTENT = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="remarks != null">
                REMARKS = #{remarks,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xrj.bean.BizTeacherHonorWithBLOBs">
    update biz_teacher_honor
    set TEACHER_ID = #{teacherId,jdbcType=VARCHAR},
      TEACHER_NAME = #{teacherName,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      ATTACHMENT = #{attachment,jdbcType=VARCHAR},
      DATE = #{date,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      PUBLIC_ABLE = #{publicAble,jdbcType=TINYINT},
      REVIEW_ID = #{reviewId,jdbcType=VARCHAR},
      REVIEW_NAME = #{reviewName,jdbcType=VARCHAR},
      REVIEW_TIME = #{reviewTime,jdbcType=TIMESTAMP},
      APPROVAL = #{approval,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=LONGVARCHAR},
      REMARKS = #{remarks,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.xrj.bean.BizTeacherHonor">
    update biz_teacher_honor
    set TEACHER_ID = #{teacherId,jdbcType=VARCHAR},
      TEACHER_NAME = #{teacherName,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      ATTACHMENT = #{attachment,jdbcType=VARCHAR},
      DATE = #{date,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      PUBLIC_ABLE = #{publicAble,jdbcType=TINYINT},
      REVIEW_ID = #{reviewId,jdbcType=VARCHAR},
      REVIEW_NAME = #{reviewName,jdbcType=VARCHAR},
      REVIEW_TIME = #{reviewTime,jdbcType=TIMESTAMP},
      APPROVAL = #{approval,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

    <!--自定义-->
    <select id="list" resultType="com.xrj.bean.BizTeacherHonorWithBLOBs">
        SELECT * FROM biz_teacher_honor bth
        <where>
            <if test="bizTeacherHonor.status != null ">
                AND  bth.STATUS = #{bizTeacherHonor.status}
            </if>
            <if test="bizTeacherHonor.teacherName != null ">
                <bind name="vteacherName" value="'%' + bizTeacherHonor.teacherName + '%'"></bind>
                AND bth.TEACHER_NAME LIKE #{vteacherName}
            </if>
            <if test="bizTeacherHonor.date != null ">
                AND bth.DATE = #{bizTeacherHonor.date}
            </if>
            <choose>
                <when test="bizTeacherHonor.teacherId != null and bizTeacherHonor.publicAble != null ">
                    AND (bth.PUBLIC_ABLE = #{bizTeacherHonor.publicAble} OR bth.TEACHER_ID = #{bizTeacherHonor.teacherId})
                </when>
                <when test="bizTeacherHonor.teacherId != null ">
                    AND bth.TEACHER_ID = #{bizTeacherHonor.teacherId}
                </when>
                <when test="bizTeacherHonor.publicAble != null ">
                    AND bth.PUBLIC_ABLE = #{bizTeacherHonor.publicAble}
                </when>
            </choose>
            <if test="bizTeacherHonor.reviewId != null ">
                AND bth.REVIEW_ID = #{bizTeacherHonor.reviewId}
            </if>
            <if test="bizTeacherHonor.reviewName != null ">
                <bind name="vreviewName" value="'%' + bizTeacherHonor.reviewName + '%'"></bind>
                AND bth.REVIEW_NAME LIKE #{vreviewName}
            </if>
            <if test="bizTeacherHonor.reviewTime != null ">
                AND bth.REVIEW_TIME = #{bizTeacherHonor.reviewTime}
            </if>
            <if test="bizTeacherHonor.title != null ">
                <bind name="vtitle" value="'%' + bizTeacherHonor.title + '%'"></bind>
                AND bth.TITLE LIKE #{vtitle}
            </if>
            <if test="bizTeacherHonor.startTime != null and bizTeacherHonor.endTime != null">
                bth.date <![CDATA[>=]]> #{bizTeacherHonor.startTime} AND bth.date <![CDATA[<=]]> #{bizTeacherHonor.endTime}
            </if>
            <choose>
                <when test="bizTeacherHonor.approval != null">
                    AND bth.APPROVAL = #{bizTeacherHonor.approval}
                </when>
                <when test="approvalList != null and approvalList.size > 0">
                    <foreach collection="approvalList" item="approval" open=" and bth.APPROVAL in (" separator="," close=")">
                        #{approval}
                    </foreach>
                </when>
            </choose>
        </where>
        ORDER BY bth.CREATE_TIME DESC
    </select>


</mapper>