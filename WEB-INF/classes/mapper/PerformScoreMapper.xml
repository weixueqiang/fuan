<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xrj.mapper.PerformScoreMapper">
  <resultMap id="BaseResultMap" type="com.xrj.bean.PerformScore">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="cyc_id" jdbcType="VARCHAR" property="cycId" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="perform_config_id" jdbcType="VARCHAR" property="performConfigId" />
    <result column="perform_type_name" jdbcType="VARCHAR" property="performTypeName" />
    <result column="grab_type" jdbcType="VARCHAR" property="grabType" />
    <result column="score" jdbcType="DECIMAL" property="score" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="editor" jdbcType="VARCHAR" property="editor" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cyc_id, teacher_id, teacher_name, perform_config_id, perform_type_name, grab_type, 
    score, creator, create_time, editor, edit_time
  </sql>
  <select id="selectByExample" parameterType="com.xrj.bean.PerformScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from perform_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from perform_score
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from perform_score
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xrj.bean.PerformScoreExample">
    delete from perform_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xrj.bean.PerformScore">
    insert into perform_score (id, cyc_id, teacher_id, 
      teacher_name, perform_config_id, perform_type_name, 
      grab_type, score, creator, 
      create_time, editor, edit_time
      )
    values (#{id,jdbcType=VARCHAR}, #{cycId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, 
      #{teacherName,jdbcType=VARCHAR}, #{performConfigId,jdbcType=VARCHAR}, #{performTypeName,jdbcType=VARCHAR}, 
      #{grabType,jdbcType=VARCHAR}, #{score,jdbcType=DECIMAL}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{editor,jdbcType=VARCHAR}, #{editTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xrj.bean.PerformScore">
    insert into perform_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cycId != null">
        cyc_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="performConfigId != null">
        perform_config_id,
      </if>
      <if test="performTypeName != null">
        perform_type_name,
      </if>
      <if test="grabType != null">
        grab_type,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editor != null">
        editor,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="cycId != null">
        #{cycId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="performConfigId != null">
        #{performConfigId,jdbcType=VARCHAR},
      </if>
      <if test="performTypeName != null">
        #{performTypeName,jdbcType=VARCHAR},
      </if>
      <if test="grabType != null">
        #{grabType,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editor != null">
        #{editor,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xrj.bean.PerformScoreExample" resultType="java.lang.Long">
    select count(*) from perform_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update perform_score
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.cycId != null">
        cyc_id = #{record.cycId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherName != null">
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.performConfigId != null">
        perform_config_id = #{record.performConfigId,jdbcType=VARCHAR},
      </if>
      <if test="record.performTypeName != null">
        perform_type_name = #{record.performTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.grabType != null">
        grab_type = #{record.grabType,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DECIMAL},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.editor != null">
        editor = #{record.editor,jdbcType=VARCHAR},
      </if>
      <if test="record.editTime != null">
        edit_time = #{record.editTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update perform_score
    set id = #{record.id,jdbcType=VARCHAR},
      cyc_id = #{record.cycId,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      perform_config_id = #{record.performConfigId,jdbcType=VARCHAR},
      perform_type_name = #{record.performTypeName,jdbcType=VARCHAR},
      grab_type = #{record.grabType,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DECIMAL},
      creator = #{record.creator,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      editor = #{record.editor,jdbcType=VARCHAR},
      edit_time = #{record.editTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xrj.bean.PerformScore">
    update perform_score
    <set>
      <if test="cycId != null">
        cyc_id = #{cycId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="performConfigId != null">
        perform_config_id = #{performConfigId,jdbcType=VARCHAR},
      </if>
      <if test="performTypeName != null">
        perform_type_name = #{performTypeName,jdbcType=VARCHAR},
      </if>
      <if test="grabType != null">
        grab_type = #{grabType,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editor != null">
        editor = #{editor,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xrj.bean.PerformScore">
    update perform_score
    set cyc_id = #{cycId,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      perform_config_id = #{performConfigId,jdbcType=VARCHAR},
      perform_type_name = #{performTypeName,jdbcType=VARCHAR},
      grab_type = #{grabType,jdbcType=VARCHAR},
      score = #{score,jdbcType=DECIMAL},
      creator = #{creator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      editor = #{editor,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <insert id="batchCreate" >
    insert into perform_score (id, teacher_id, 
      teacher_name, perform_config_id, perform_type_name, 
      grab_type, score, creator, 
      create_time, editor, edit_time
      )
    values 
    	<foreach collection="teacherList" item="var" separator=",">
	    (UUID_SHORT(), #{var.teacherId}, 
	      #{var.teacherName}, #{var.performConfigId}, #{var.performTypeName}, 
	      #{var.grabType}, #{var.score,jdbcType=DECIMAL}, #{var.creator}, 
	      #{var.createTime}, #{var.editor}, #{var.editTime}
	      )
    	</foreach>
  </insert>
</mapper>